# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: api/requests/v1/requests.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import api.requests.v1.requests_pb2


class RequestServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetRequests(self, stream: 'grpclib.server.Stream[api.requests.v1.requests_pb2.Empty, api.requests.v1.requests_pb2.RequestList]') -> None:
        pass

    @abc.abstractmethod
    async def CreateRequest(self, stream: 'grpclib.server.Stream[api.requests.v1.requests_pb2.Request, api.requests.v1.requests_pb2.Request]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateRequest(self, stream: 'grpclib.server.Stream[api.requests.v1.requests_pb2.Request, api.requests.v1.requests_pb2.Request]') -> None:
        pass

    @abc.abstractmethod
    async def GetRequestStatus(self, stream: 'grpclib.server.Stream[api.requests.v1.requests_pb2.Request, api.requests.v1.requests_pb2.RequestStatus]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/api.RequestService/GetRequests': grpclib.const.Handler(
                self.GetRequests,
                grpclib.const.Cardinality.UNARY_UNARY,
                api.requests.v1.requests_pb2.Empty,
                api.requests.v1.requests_pb2.RequestList,
            ),
            '/api.RequestService/CreateRequest': grpclib.const.Handler(
                self.CreateRequest,
                grpclib.const.Cardinality.UNARY_UNARY,
                api.requests.v1.requests_pb2.Request,
                api.requests.v1.requests_pb2.Request,
            ),
            '/api.RequestService/UpdateRequest': grpclib.const.Handler(
                self.UpdateRequest,
                grpclib.const.Cardinality.UNARY_UNARY,
                api.requests.v1.requests_pb2.Request,
                api.requests.v1.requests_pb2.Request,
            ),
            '/api.RequestService/GetRequestStatus': grpclib.const.Handler(
                self.GetRequestStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                api.requests.v1.requests_pb2.Request,
                api.requests.v1.requests_pb2.RequestStatus,
            ),
        }


class RequestServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetRequests = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.RequestService/GetRequests',
            api.requests.v1.requests_pb2.Empty,
            api.requests.v1.requests_pb2.RequestList,
        )
        self.CreateRequest = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.RequestService/CreateRequest',
            api.requests.v1.requests_pb2.Request,
            api.requests.v1.requests_pb2.Request,
        )
        self.UpdateRequest = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.RequestService/UpdateRequest',
            api.requests.v1.requests_pb2.Request,
            api.requests.v1.requests_pb2.Request,
        )
        self.GetRequestStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.RequestService/GetRequestStatus',
            api.requests.v1.requests_pb2.Request,
            api.requests.v1.requests_pb2.RequestStatus,
        )
